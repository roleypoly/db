name: Ent CI
on:
  push:
    paths:
      - 'ent/*'
      - 'cmd/db-tool/*'
      - '.github/workflows/ent.yml'
      - 'go.mod'
      - 'go.sum'

jobs:
  validate:
    name: Validate Ent Generation
    runs-on: ubuntu-latest
    steps:
      - name: Ensure Go
        uses: actions/setup-go@master
        with:
          go-version: 1.13.x

      - uses: actions/checkout@v1

      - run: go get ./...

      - run: go generate ./ent

      - name: Check if dirty
        run: test -z "`git status -s`" || (git status && exit 1)
  
  build_migrator:
    name: Build Migration Container
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@master

      - name: Docker Login
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build & Push Docker Image
        uses: roleypoly/actions/dxt@master
        if: github.event_name == 'push'
        with:
          tag: roleypoly/db-migrate:${{ github.sha }}
          platforms: linux/amd64
          qemu: 'false'
          push: 'true'
          dockerfile: ./cmd/migrate/Dockerfile

      - name: Retag Image
        if: github.event_name == 'push'
        run: |
          retag() {
            curl -sSL https://github.com/docker/buildx/releases/download/v0.3.0/buildx-v0.3.0.linux-amd64 > $HOME/buildx &&\
            chmod a+x $HOME/buildx &&\
            $HOME/buildx imagetools create --tag "roleypoly/db-migrate:$1" "roleypoly/db-migrate:${{ github.sha }}" && \
            exit 0
          }
          test ${{ github.ref }} = "refs/heads/master" && retag latest || \
          test ${{ github.ref }} = "refs/heads/develop" && retag next || \
          test ${{ github.ref }} = "refs/heads/ci-testing" && retag scratch || \
          echo "not a well-known branch, not retagging"

  smoke_test_migrator:
    name: Smoke Test Migration Container
    runs-on: ubuntu-latest
    needs: build_migrator
    container:
      image: docker:latest
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    services:
      postgres:
        image: postgres:12-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: 19216801
          POSTGRES_DB: roleypoly
          POSTGRES_USER: roleypoly
          POSTGRES_INITDB_ARGS: -A trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Run Migration
        run: |
          NETWORK=$(docker network ls | grep github | tr -s ' ' ':' | cut -d':' -f2)
          docker run -e DB_URL --network=$NETWORK roleypoly/db-migrate:${{ github.sha }} migrate
        env:
          DB_INIT: roleypoly-${{ github.sha }}
          DB_URL: postgresql://roleypoly:19216801@postgres:${{ job.services.postgres.ports['5432'] }}/?sslmode=disable
        
