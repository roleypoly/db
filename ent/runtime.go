// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/roleypoly/db/ent/challenge"
	"github.com/roleypoly/db/ent/guild"
	"github.com/roleypoly/db/ent/schema"
	"github.com/roleypoly/db/ent/session"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	challengeMixin := schema.Challenge{}.Mixin()
	challengeMixinFields0 := challengeMixin[0].Fields()
	challengeFields := schema.Challenge{}.Fields()
	_ = challengeFields
	// challengeDescCreateTime is the schema descriptor for create_time field.
	challengeDescCreateTime := challengeMixinFields0[0].Descriptor()
	// challenge.DefaultCreateTime holds the default value on creation for the create_time field.
	challenge.DefaultCreateTime = challengeDescCreateTime.Default.(func() time.Time)
	// challengeDescUpdateTime is the schema descriptor for update_time field.
	challengeDescUpdateTime := challengeMixinFields0[1].Descriptor()
	// challenge.DefaultUpdateTime holds the default value on creation for the update_time field.
	challenge.DefaultUpdateTime = challengeDescUpdateTime.Default.(func() time.Time)
	// challenge.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	challenge.UpdateDefaultUpdateTime = challengeDescUpdateTime.UpdateDefault.(func() time.Time)
	// challengeDescExpiresAt is the schema descriptor for expires_at field.
	challengeDescExpiresAt := challengeFields[4].Descriptor()
	// challenge.DefaultExpiresAt holds the default value on creation for the expires_at field.
	challenge.DefaultExpiresAt = challengeDescExpiresAt.Default.(func() time.Time)
	guildMixin := schema.Guild{}.Mixin()
	guildMixinFields0 := guildMixin[0].Fields()
	guildFields := schema.Guild{}.Fields()
	_ = guildFields
	// guildDescCreateTime is the schema descriptor for create_time field.
	guildDescCreateTime := guildMixinFields0[0].Descriptor()
	// guild.DefaultCreateTime holds the default value on creation for the create_time field.
	guild.DefaultCreateTime = guildDescCreateTime.Default.(func() time.Time)
	// guildDescUpdateTime is the schema descriptor for update_time field.
	guildDescUpdateTime := guildMixinFields0[1].Descriptor()
	// guild.DefaultUpdateTime holds the default value on creation for the update_time field.
	guild.DefaultUpdateTime = guildDescUpdateTime.Default.(func() time.Time)
	// guild.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	guild.UpdateDefaultUpdateTime = guildDescUpdateTime.UpdateDefault.(func() time.Time)
	sessionMixin := schema.Session{}.Mixin()
	sessionMixinFields0 := sessionMixin[0].Fields()
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreateTime is the schema descriptor for create_time field.
	sessionDescCreateTime := sessionMixinFields0[0].Descriptor()
	// session.DefaultCreateTime holds the default value on creation for the create_time field.
	session.DefaultCreateTime = sessionDescCreateTime.Default.(func() time.Time)
	// sessionDescUpdateTime is the schema descriptor for update_time field.
	sessionDescUpdateTime := sessionMixinFields0[1].Descriptor()
	// session.DefaultUpdateTime holds the default value on creation for the update_time field.
	session.DefaultUpdateTime = sessionDescUpdateTime.Default.(func() time.Time)
	// session.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	session.UpdateDefaultUpdateTime = sessionDescUpdateTime.UpdateDefault.(func() time.Time)
	// sessionDescExpiresAt is the schema descriptor for expires_at field.
	sessionDescExpiresAt := sessionFields[3].Descriptor()
	// session.DefaultExpiresAt holds the default value on creation for the expires_at field.
	session.DefaultExpiresAt = sessionDescExpiresAt.Default.(func() time.Time)
}
