// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/roleypoly/db/ent/challenge"
	"github.com/roleypoly/db/ent/guild"
	"github.com/roleypoly/db/ent/schema"
	"github.com/roleypoly/db/ent/session"

	"github.com/facebookincubator/ent"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	challengeMixin := schema.Challenge{}.Mixin()
	challengeMixinFields := [...][]ent.Field{
		challengeMixin[0].Fields(),
	}
	challengeFields := schema.Challenge{}.Fields()
	_ = challengeFields
	// challengeDescCreatedAt is the schema descriptor for created_at field.
	challengeDescCreatedAt := challengeMixinFields[0][0].Descriptor()
	// challenge.DefaultCreatedAt holds the default value on creation for the created_at field.
	challenge.DefaultCreatedAt = challengeDescCreatedAt.Default.(func() time.Time)
	// challengeDescUpdatedAt is the schema descriptor for updated_at field.
	challengeDescUpdatedAt := challengeMixinFields[0][1].Descriptor()
	// challenge.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	challenge.DefaultUpdatedAt = challengeDescUpdatedAt.Default.(func() time.Time)
	// challenge.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	challenge.UpdateDefaultUpdatedAt = challengeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// challengeDescExpiresAt is the schema descriptor for expires_at field.
	challengeDescExpiresAt := challengeFields[4].Descriptor()
	// challenge.DefaultExpiresAt holds the default value on creation for the expires_at field.
	challenge.DefaultExpiresAt = challengeDescExpiresAt.Default.(func() time.Time)
	guildMixin := schema.Guild{}.Mixin()
	guildMixinFields := [...][]ent.Field{
		guildMixin[0].Fields(),
	}
	guildFields := schema.Guild{}.Fields()
	_ = guildFields
	// guildDescCreatedAt is the schema descriptor for created_at field.
	guildDescCreatedAt := guildMixinFields[0][0].Descriptor()
	// guild.DefaultCreatedAt holds the default value on creation for the created_at field.
	guild.DefaultCreatedAt = guildDescCreatedAt.Default.(func() time.Time)
	// guildDescUpdatedAt is the schema descriptor for updated_at field.
	guildDescUpdatedAt := guildMixinFields[0][1].Descriptor()
	// guild.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	guild.DefaultUpdatedAt = guildDescUpdatedAt.Default.(func() time.Time)
	// guild.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	guild.UpdateDefaultUpdatedAt = guildDescUpdatedAt.UpdateDefault.(func() time.Time)
	sessionMixin := schema.Session{}.Mixin()
	sessionMixinFields := [...][]ent.Field{
		sessionMixin[0].Fields(),
	}
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionMixinFields[0][0].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	// sessionDescUpdatedAt is the schema descriptor for updated_at field.
	sessionDescUpdatedAt := sessionMixinFields[0][1].Descriptor()
	// session.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	session.DefaultUpdatedAt = sessionDescUpdatedAt.Default.(func() time.Time)
	// session.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	session.UpdateDefaultUpdatedAt = sessionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sessionDescExpiresAt is the schema descriptor for expires_at field.
	sessionDescExpiresAt := sessionFields[3].Descriptor()
	// session.DefaultExpiresAt holds the default value on creation for the expires_at field.
	session.DefaultExpiresAt = sessionDescExpiresAt.Default.(func() time.Time)
}
